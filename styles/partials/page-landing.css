#page-landing {
    background: var(--color-primary);
}

#page-landing #container {
    color: var(--color-text-in-primary);
}


.logo-container img {
    height: 10rem;
}

.logo-container {
    text-align: center;
    margin-bottom: 3.2rem;
}

.logo-contaier h2 {
    font-weight: 500;
    font-size: 3.6rem;
    line-height: 4.6rem;
    margin-top: 0.8rem;
}

/* using 100% of div 'container' viewport size */
.hero-image {
    width: 100%;
}


.buttons-container {
    /* add flex to center all buttons using justify-content */ 
    display: flex;
    justify-content: center;
    margin: 3.2rem 0;
}

.buttons-container a {
    width: 30rem;
    height: 10.4rem;
    
    /* makes borders rounded */ 
    border-radius: 0.8rem;
    margin-right: 1.6rem;
    font: 700 2.4rem Archivo;

    /* align configuration */
    display: flex;
    align-items: center;
    justify-content: center;

    /* removing the underline from the button's text */
    text-decoration: none;
    color: var(--color-button-text);

    /* every time the background suffer any change */
    /* the given property is going to be applied */
    transition: background 0.6s,
                font-size 0.8s;

}

/* config all img inside the btn-container to be resized */
/* in this case, we are going to change the button's icons img */
.buttons-container a img {
    width: 4rem;
    margin-right: 2.4rem;
}

/* config the background color of the 'study' button */
.buttons-container a.study {
    background: var(--color-primary-lighter);
}

/* config when the mouse is upon the study's button */
.buttons-container a.study:hover {
    background: var(--color-primary-light);
    font-size: 2.8rem;
}

/* config the background color of the 'give classes' button */
.buttons-container a.give-classes {
    background: var(--color-secondary);
    /* this only fix the center align between both buttons */
    margin-right: 0;
}

.buttons-container a.give-classes:hover {
    background: var(--color-secondary-dark);
    font-size: 2.8rem;
}


.total-connections {
    font-size: 1.8rem;

    /* align config */
    display: flex;
    align-items: center;
    justify-content: center;
}

.total-connections img {
    margin-left: 0.8rem;
}

@media (max-width: 699px) {
    :root {
        font-size: 40%;
    }
}

/* css rule which only applies the specified changes */
/* when the previously specified parameter is true */
@media (min-width: 1100px) {
    #page-landing #container {
        max-width: 1100px;
        transition: max-width 1.8s;

        /* defining grid display type */
        display: grid;
        /* here we define the amount of columns and their size */
        /* the quantity is measured by the amount of parameters */
        /* you can define their sizes by: */
        /* 33% 33% 33% (exemple %) */
        /* 1fr 1fr 1fr (exemple fractions) */
        /* 100px 100px 100px (example fixed px) */
        grid-template-columns: 2fr 1fr 2fr;
        grid-template-rows: 350px 1fr;
        grid-template-areas:
        /* first row */
        "proffy image image"
        /* second row */
        "button button texting";

        /* defines the gap distance between the grid */
        column-gap: 87px;
        row-gap: 86px;
    }

    .logo-container {
        grid-area: proffy;
        text-align: initial;
        /* every self content will be align at the center */
        align-self: center;
        margin: 0;
    }

    .logo-container img {
        height: 127px;
    }

    .hero-image {
        grid-area: image;
        height: 350px;
    }

    .buttons-container {
        grid-area: button;
        /* ajust buttons to be at the start position at his current grid fraction */
        justify-content: flex-start;
        margin: 0;
    }

    .total-connections {
        grid-area: texting;
        justify-self: flex-end;
        font-size: 1.2rem;
    }
}